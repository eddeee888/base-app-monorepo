version: "3.7"

services:
  # Set up client container
  client:
    build:
      context: ./client
      target: base
    command: yarn start
    ports:
      - ${CLIENT_PORT}:${CLIENT_PORT}
    environment:
      PORT: ${CLIENT_PORT}
      CHOKIDAR_USEPOLLING: "true"
      CHOKIDAR_INTERVAL: 5000
      TSC_WATCHFILE: "UseFsEventsWithFallbackDynamicPolling"
    volumes:
      - ./client/src:/usr/src/app/src
      - ./client/package.json:/usr/src/app/package.json
    networks:
      - com_vm

  client-seo:
    build:
      context: ./client-seo
      target: base
    command: yarn dev -p ${CLIENT_SEO_PORT}
    ports:
      - ${CLIENT_SEO_PORT}:${CLIENT_SEO_PORT}
    environment:
      NEXT_PUBLIC_GRAPHQL_ENDPOINT: ${GRAPHQL_ENDPOINT}
      NEXT_PUBLIC_GRAPHQL_ENDPOINT_SSR: ${GRAPHQL_ENDPOINT_SSR}
      NEXT_PUBLIC_APP_NAME: ${APP_NAME}
      NEXT_PUBLIC_APP_ORIGIN: ${APP_ORIGIN}
    volumes:
      - ./client-seo/src:/usr/src/app/src
      - ./client-seo/package.json:/usr/src/app/package.json
      - ./client-seo/.next:/usr/src/app/.next
    networks:
      - com_vm

  # Set up server container
  server:
    build:
      context: ./server
      target: base
    command: yarn start
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    environment:
      APP_ORIGIN: ${APP_ORIGIN}
      PRIMARY_DOMAIN: ${PRIMARY_DOMAIN}
      CLIENT_SEO_SERVICE_DOMAIN: ${CLIENT_SEO_SERVICE_DOMAIN}
      CLIENT_SERVICE_DOMAIN: ${CLIENT_SERVICE_DOMAIN}
      GRAPHQL_ENDPOINT: ${GRAPHQL_ENDPOINT}
      JWT_SECRET: ${JWT_SECRET}
      PRISMA_DATABASE_URL: ${PRISMA_DATABASE_URL}
      PORT: ${SERVER_PORT}
    volumes:
      - ./server/src:/usr/src/app/src
      - ./server/prisma:/usr/src/app/prisma
      - ./server/package.json:/usr/src/app/package.json
    networks:
      - com_vm

  # Set up server worker - TODO: this will not work with serverless framework
  server-worker:
    build:
      context: ./server
      target: base
    command: yarn start:crons
    environment:
      PRISMA_DATABASE_URL: ${PRISMA_DATABASE_URL}
    volumes:
      - ./server/src:/usr/src/app/src
      - ./server/prisma:/usr/src/app/prisma
      - ./server/package.json:/usr/src/app/package.json
    networks:
      - com_vm

  # Set up load balancer container 
  reverse-proxy:
    build:
      context: ./reverse-proxy
    tty: true
    environment:
      CLIENT_SERVICE_NAME: ${CLIENT_SERVICE_NAME}
      CLIENT_PORT: ${CLIENT_PORT}
      CLIENT_SEO_SERVICE_NAME: ${CLIENT_SEO_SERVICE_NAME}
      CLIENT_SEO_PORT: ${CLIENT_SEO_PORT}
      SERVER_SERVICE_NAME: ${SERVER_SERVICE_NAME}
      SERVER_PORT: ${SERVER_PORT}
      CLIENT_SERVICE_DOMAIN: ${CLIENT_SERVICE_DOMAIN}
      CLIENT_SEO_SERVICE_DOMAIN: ${CLIENT_SEO_SERVICE_DOMAIN}
      SERVER_SERVICE_DOMAIN: ${SERVER_SERVICE_DOMAIN}
    ports:
      - 80:80
      - 443:443
    depends_on:
      - client
      - client-seo
      - server
    networks:
      com_vm:
        aliases:
          - ${CLIENT_SEO_SERVICE_DOMAIN}

  # Set up database server
  database:
    image: mysql:5.7
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PORT=${MYSQL_PORT}
    volumes:
      - database:/var/lib/mysql
    expose:
      - ${MYSQL_PORT}
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    networks:
      - com_vm

volumes:
  database:

networks:
  com_vm:
