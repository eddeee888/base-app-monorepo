Remove this line to activate this workflow
name: Deploy server app
on:
  push:
    branches:
      - "master"
    paths:
      - "services/common/**"
      - "services/route-manager/**"
      - "services/server/**"
      - "package.json"
jobs:
  build-server-app:
    name: Build server app
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Copy common files
        run: yarn common:copy 

      - name: Route codegen PROD
        run: yarn routegen:prod

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_CI }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_CI }}
          aws-region: #FILLME

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: #FILLME
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd services/server
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
      
      - name: Confirm image has been uploaded
        run: ./ci/scripts/find-ecr-image.sh ECR_REPOSITORY ${{ github.sha }}

  deploy-server-app:
    name: Deploy server app
    needs: [build-server-app]
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Prepare server ops
        run: yarn build:server:ops

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_CI }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_CI }}
          aws-region: #FILLME

      - name: Deploy server app
        uses: MikeBild/aws-cdk-js-github-action@1.0.0
        timeout-minutes: 10
        with:
          args: deploy ServerAppStack --require-approval never --app services/server/ops/bin/ops.js
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_CI }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_CI }}
          AWS_REGION: #FILLME
          SERVER_SERVICE_DOMAIN: #FILLME
          CONTAINER_IMAGE_TAG: ${{ github.sha }}

      - name: Run migration
        run: ./ci/scripts/migrate-server-app-database.sh