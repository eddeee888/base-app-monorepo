// This is your Prisma schema file.
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider             = "mysql"
  url                  = env("PRISMA_DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  output          = "generated/prisma-client-js"
  binaryTargets   = env("PRISMA_BINARY_TARGET")
  previewFeatures = ["interactiveTransactions", "referentialIntegrity"]
}

model Account {
  id                       String   @id @default(cuid())
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?  @db.Text
  refresh_token_expires_in Int?
  access_token             String?  @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?  @db.Text
  session_state            String?
  user                     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId                   Int
  updatedAt                DateTime @updatedAt
  createdAt                DateTime @default(now())

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int
  updatedAt    DateTime @updatedAt
  createdAt    DateTime @default(now())

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  updatedAt  DateTime @updatedAt
  createdAt  DateTime @default(now())

  @@unique([identifier, token])
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}
