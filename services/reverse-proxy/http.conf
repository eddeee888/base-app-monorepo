upstream $ENV{CLIENT_SERVICE_NAME} {
  server $ENV{CLIENT_SERVICE_NAME}:$ENV{CLIENT_PORT};
}

upstream $ENV{CLIENT_SEO_SERVICE_NAME} {
  server $ENV{CLIENT_SEO_SERVICE_NAME}:$ENV{CLIENT_SEO_PORT};
}

upstream $ENV{SERVER_SERVICE_NAME} {
  server $ENV{SERVER_SERVICE_NAME}:$ENV{SERVER_PORT};
}

server {
  listen 80;
  server_name $ENV{CLIENT_SEO_SERVICE_DOMAIN};
  
  location / {
        return 301 https://$host$request_uri;
  }      
}

server {
  listen 443 ssl;
  server_name $ENV{CLIENT_SEO_SERVICE_DOMAIN};
  ssl_certificate /usr/share/nginx/certificates/client-seo/device.crt;
  ssl_certificate_key /usr/share/nginx/certificates/client-seo/device.key;

  location / {
    proxy_pass http://$ENV{CLIENT_SEO_SERVICE_NAME};
    include /etc/nginx/proxy.conf;
  }
}

server {
  listen 443 ssl;
  server_name $ENV{CLIENT_SERVICE_DOMAIN};
  ssl_certificate /usr/share/nginx/certificates/client/device.crt;
  ssl_certificate_key /usr/share/nginx/certificates/client/device.key;

  location / {
    proxy_pass http://$ENV{CLIENT_SERVICE_NAME};
    include /etc/nginx/proxy.conf;

    # WebSocket support
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
}

server {
  listen 443 ssl;
  server_name $ENV{SERVER_SERVICE_DOMAIN};
  ssl_certificate /usr/share/nginx/certificates/server/device.crt;
  ssl_certificate_key /usr/share/nginx/certificates/server/device.key;

  location / {
    proxy_pass http://$ENV{SERVER_SERVICE_NAME};
    include /etc/nginx/proxy.conf;

    # WebSocket support
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
}